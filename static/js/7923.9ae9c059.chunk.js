"use strict";(globalThis.webpackChunkfield_sustainability_helper=globalThis.webpackChunkfield_sustainability_helper||[]).push([[7923],{57923:(e,t,r)=>{r.r(t),r.d(t,{default:()=>h});var n=r(27366),s=r(49861),i=(r(63780),r(93169),r(25243),r(69912)),a=r(76200),o=r(23084);r(59486);var N=r(35594),u=r(80885);var I=r(77981);var _=r(66236);var l=r(20199),T=r(10961);var f=r(51041),c=r(79579);var S=r(74929),y=r(30263);var A=r(45362),U=r(81135),O=r(79091);var E=r(35995);var R=r(74877),g=r(81674),p=r(29909);var d=r(4338);let m=class extends d.Z{constructor(e){super(e),this.url=null}areasAndLengths(e,t){return async function(e,t,r){const n=(0,o.en)(e),s={...n.query,f:"json",...t.toJSON()},i=(0,o.lA)(s,r);return(0,a.default)(n.path+"/areasAndLengths",i).then((e=>e.data))}(this.url,e,t)}autoComplete(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=(0,o.en)(e),I={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),polygons:JSON.stringify((0,N.F)(t).geometries),polylines:JSON.stringify((0,N.F)(r).geometries)},_=(0,o.lA)(I,n);return(0,a.default)(i.path+"/autoComplete",_).then((e=>{let{data:t}=e;return(t.geometries||[]).map((e=>{let{rings:t}=e;return new u.Z({spatialReference:s,rings:t})}))}))}(this.url,e,t,r)}buffer(e,t){return async function(e,t,r){const n=(0,o.en)(e),s={...n.query,f:"json",...t.toJSON()},i=t.outSpatialReference||t.geometries[0].spatialReference,N=(0,o.lA)(s,r);return(0,a.default)(n.path+"/buffer",N).then((e=>(e.data.geometries||[]).map((e=>{let{rings:t}=e;return new u.Z({spatialReference:i,rings:t})}))))}(this.url,e,t)}convexHull(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=(0,o.en)(e),i={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify((0,N.F)(t))},u=(0,o.lA)(i,r);return(0,a.default)(s.path+"/convexHull",u).then((e=>{let{data:t}=e;return(0,I.im)(t.geometry).set({spatialReference:n})}))}(this.url,e,t)}cut(e,t,r){return async function(e,t,r,n){const s=(0,o.en)(e),i=t[0].spatialReference,N={...n,query:{...s.query,f:"json",sr:JSON.stringify(i),target:JSON.stringify({geometryType:(0,I.Ji)(t[0]),geometries:t}),cutter:JSON.stringify(r)}},u=await(0,a.default)(s.path+"/cut",N),{cutIndexes:_,geometries:l=[]}=u.data;return{cutIndexes:_,geometries:l.map((e=>{const t=(0,I.im)(e);return t.spatialReference=i,t}))}}(this.url,e,t,r)}densify(e,t){return async function(e,t,r){const n=t.geometries[0].spatialReference,s=(0,o.en)(e),i={...s.query,f:"json",...t.toJSON()},N=(0,o.lA)(i,r);return(0,a.default)(s.path+"/densify",N).then((e=>{let{data:t}=e;return(t.geometries||[]).map((e=>(0,I.im)(e).set({spatialReference:n})))}))}(this.url,e,t)}difference(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=(0,o.en)(e);let u={query:{...i.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify((0,N.F)(t)),geometry:JSON.stringify({geometryType:(0,I.Ji)(r),geometry:r.toJSON()})}};return n&&(u={...n,...u}),(0,a.default)(i.path+"/difference",u).then((e=>{let{data:t}=e;return(t.geometries||[]).map((e=>(0,I.im)(e).set({spatialReference:s})))}))}(this.url,e,t,r)}distance(e,t){return async function(e,t,r){const n=(0,o.en)(e),s={...n.query,f:"json",...t.toJSON()},i=(0,o.lA)(s,r);return(0,a.default)(n.path+"/distance",i).then((e=>{let{data:t}=e;return t&&t.distance}))}(this.url,e,t)}fromGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.strings=JSON.stringify(t.strings);const s=t.conversionType||"mgrs";n.conversionType=_.s.toJSON(s),n.conversionMode=t.conversionMode;const i=(0,o.en)(e),N={...i.query,f:"json",...n},u=(0,o.lA)(N,r);return(0,a.default)(i.path+"/fromGeoCoordinateString",u).then((e=>{let{data:t}=e;return t.coordinates}))}(this.url,e,t)}generalize(e,t){return async function(e,t,r){const n=(t=T.Z.from(t)).toJSON(),s=(0,l.G)(t),i=(0,o.en)(e),N={...i.query,f:"json",...s},u=n.geometries[0].spatialReference,_=(0,o.lA)(N,r);return(0,a.default)(i.path+"/generalize",_).then((e=>{let{data:t}=e;return(t.geometries||[]).map((e=>(0,I.im)(e).set({spatialReference:u})))}))}(this.url,e,t)}intersect(e,t,r){return async function(e,t,r,n){const s=t[0].spatialReference,i=(0,o.en)(e),u={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),geometries:JSON.stringify((0,N.F)(t)),geometry:JSON.stringify({geometryType:(0,I.Ji)(r),geometry:r.toJSON()})},_=(0,o.lA)(u,n);return(0,a.default)(i.path+"/intersect",_).then((e=>{let{data:t}=e;return(t.geometries||[]).map((e=>(0,I.im)(e).set({spatialReference:s})))}))}(this.url,e,t,r)}labelPoints(e,t){return function(e,t,r){const n=t.map((e=>e.toJSON())),s=t[0].spatialReference,i=(0,o.en)(e),N={...i.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s.toJSON()),polygons:JSON.stringify(n)},u=(0,o.lA)(N,r);return(0,a.default)(i.path+"/labelPoints",u).then((e=>{let{data:t}=e;return(t.labelPoints||[]).map((e=>(0,I.im)(e).set({spatialReference:s})))}))}(this.url,e,t)}lengths(e,t){return async function(e,t,r){t=c.Z.from(t);const n=(0,f.u)(t),s=(0,o.en)(e),i={...s.query,f:"json",...n},N=(0,o.lA)(i,r);return(0,a.default)(s.path+"/lengths",N).then((e=>{let{data:t}=e;return t}))}(this.url,e,t)}offset(e,t){return async function(e,t,r){t=y.Z.from(t);const n=(0,S.l)(t),s=(0,o.en)(e),i={...s.query,f:"json",...n},N=t.geometries[0].spatialReference,u=(0,o.lA)(i,r);return(0,a.default)(s.path+"/offset",u).then((e=>{let{data:t}=e;return(t.geometries||[]).map((e=>(0,I.im)(e).set({spatialReference:N})))}))}(this.url,e,t)}project(e,t){return(0,A.i)(this.url,e,t)}relation(e,t){return async function(e,t,r){t=O.Z.from(t);const n=(0,U.c)(t),s=(0,o.en)(e),i={...s.query,f:"json",...n},N=(0,o.lA)(i,r);return(0,a.default)(s.path+"/relation",N).then((e=>{let{data:t}=e;return t.relations}))}(this.url,e,t)}reshape(e,t,r){return async function(e,t,r,n){const s=t.spatialReference,i=(0,o.en)(e),N={...i.query,f:"json",sr:JSON.stringify(s.toJSON()),target:JSON.stringify({geometryType:(0,I.Ji)(t),geometry:t.toJSON()}),reshaper:JSON.stringify(r.toJSON())},u=(0,o.lA)(N,n);return(0,a.default)(i.path+"/reshape",u).then((e=>{let{data:t}=e;return(0,I.im)(t.geometry).set({spatialReference:s})}))}(this.url,e,t,r)}simplify(e,t){return async function(e,t,r){const n="string"==typeof e?(0,E.mN)(e):e,s=t[0].spatialReference,i=(0,I.Ji)(t[0]),o={...r,query:{...n.query,f:"json",sr:s.wkid?s.wkid:JSON.stringify(s),geometries:JSON.stringify((0,N.F)(t))}},{data:u}=await(0,a.default)(n.path+"/simplify",o);return(0,N.o)(u.geometries,i,s)}(this.url,e,t)}toGeoCoordinateString(e,t){return async function(e,t,r){const n={};null!=t.sr&&"object"==typeof t.sr?n.sr=t.sr.wkid||JSON.stringify(t.sr):n.sr=t.sr,n.coordinates=JSON.stringify(t.coordinates);const s=t.conversionType||"mgrs";n.conversionType=_.s.toJSON(s),n.conversionMode=t.conversionMode,n.numOfDigits=t.numOfDigits,n.rounding=t.rounding,n.addSpaces=t.addSpaces;const i=(0,o.en)(e),N={...i.query,f:"json",...n},u=(0,o.lA)(N,r);return(0,a.default)(i.path+"/toGeoCoordinateString",u).then((e=>{let{data:t}=e;return t.strings}))}(this.url,e,t)}trimExtend(e,t){return async function(e,t,r){t=g.Z.from(t);const n=(0,R.n)(t),s=(0,o.en)(e),i={...s.query,f:"json",...n},N=t.sr,u=(0,o.lA)(i,r);return(0,a.default)(s.path+"/trimExtend",u).then((e=>{let{data:t}=e;return(t.geometries||[]).map((e=>{let{paths:t}=e;return new p.Z({spatialReference:N,paths:t})}))}))}(this.url,e,t)}union(e,t){return async function(e,t,r){const n=t[0].spatialReference,s=(0,o.en)(e),i={...s.query,f:"json",sr:JSON.stringify(n.toJSON()),geometries:JSON.stringify((0,N.F)(t))},u=(0,o.lA)(i,r);return(0,a.default)(s.path+"/union",u).then((e=>{let{data:t}=e;return(0,I.im)(t.geometry).set({spatialReference:n})}))}(this.url,e,t)}};m.UNIT_METER=9001,m.UNIT_GERMAN_METER=9031,m.UNIT_FOOT=9002,m.UNIT_SURVEY_FOOT=9003,m.UNIT_CLARKE_FOOT=9005,m.UNIT_FATHOM=9014,m.UNIT_NAUTICAL_MILE=9030,m.UNIT_SURVEY_CHAIN=9033,m.UNIT_SURVEY_LINK=9034,m.UNIT_SURVEY_MILE=9035,m.UNIT_KILOMETER=9036,m.UNIT_CLARKE_YARD=9037,m.UNIT_CLARKE_CHAIN=9038,m.UNIT_CLARKE_LINK=9039,m.UNIT_SEARS_YARD=9040,m.UNIT_SEARS_FOOT=9041,m.UNIT_SEARS_CHAIN=9042,m.UNIT_SEARS_LINK=9043,m.UNIT_BENOIT_1895A_YARD=9050,m.UNIT_BENOIT_1895A_FOOT=9051,m.UNIT_BENOIT_1895A_CHAIN=9052,m.UNIT_BENOIT_1895A_LINK=9053,m.UNIT_BENOIT_1895B_YARD=9060,m.UNIT_BENOIT_1895B_FOOT=9061,m.UNIT_BENOIT_1895B_CHAIN=9062,m.UNIT_BENOIT_1895B_LINK=9063,m.UNIT_INDIAN_FOOT=9080,m.UNIT_INDIAN_1937_FOOT=9081,m.UNIT_INDIAN_1962_FOOT=9082,m.UNIT_INDIAN_1975_FOOT=9083,m.UNIT_INDIAN_YARD=9084,m.UNIT_INDIAN_1937_YARD=9085,m.UNIT_INDIAN_1962_YARD=9086,m.UNIT_INDIAN_1975_YARD=9087,m.UNIT_FOOT_1865=9070,m.UNIT_RADIAN=9101,m.UNIT_DEGREE=9102,m.UNIT_ARCMINUTE=9103,m.UNIT_ARCSECOND=9104,m.UNIT_GRAD=9105,m.UNIT_GON=9106,m.UNIT_MICRORADIAN=9109,m.UNIT_ARCMINUTE_CENTESIMAL=9112,m.UNIT_ARCSECOND_CENTESIMAL=9113,m.UNIT_MIL6400=9114,m.UNIT_BRITISH_1936_FOOT=9095,m.UNIT_GOLDCOAST_FOOT=9094,m.UNIT_INTERNATIONAL_CHAIN=109003,m.UNIT_INTERNATIONAL_LINK=109004,m.UNIT_INTERNATIONAL_YARD=109001,m.UNIT_STATUTE_MILE=9093,m.UNIT_SURVEY_YARD=109002,m.UNIT_50KILOMETER_LENGTH=109030,m.UNIT_150KILOMETER_LENGTH=109031,m.UNIT_DECIMETER=109005,m.UNIT_CENTIMETER=109006,m.UNIT_MILLIMETER=109007,m.UNIT_INTERNATIONAL_INCH=109008,m.UNIT_US_SURVEY_INCH=109009,m.UNIT_INTERNATIONAL_ROD=109010,m.UNIT_US_SURVEY_ROD=109011,m.UNIT_US_NAUTICAL_MILE=109012,m.UNIT_UK_NAUTICAL_MILE=109013,m.UNIT_SQUARE_INCHES="esriSquareInches",m.UNIT_SQUARE_FEET="esriSquareFeet",m.UNIT_SQUARE_YARDS="esriSquareYards",m.UNIT_ACRES="esriAcres",m.UNIT_SQUARE_MILES="esriSquareMiles",m.UNIT_SQUARE_MILLIMETERS="esriSquareMillimeters",m.UNIT_SQUARE_CENTIMETERS="esriSquareCentimeters",m.UNIT_SQUARE_DECIMETERS="esriSquareDecimeters",m.UNIT_SQUARE_METERS="esriSquareMeters",m.UNIT_ARES="esriAres",m.UNIT_HECTARES="esriHectares",m.UNIT_SQUARE_KILOMETERS="esriSquareKilometers",(0,n._)([(0,s.Cb)()],m.prototype,"url",void 0),m=(0,n._)([(0,i.j)("esri.tasks.GeometryService")],m);const h=m}}]);
//# sourceMappingURL=7923.9ae9c059.chunk.js.map