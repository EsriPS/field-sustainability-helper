{"version":3,"file":"static/js/6461.86a48606.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.22/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r}from\"../../core/maybe.js\";import e from\"../../geometry/support/GeographicTransformation.js\";import t from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as s,split as i,mosaic as a,approximateTransform as n}from\"./rasterFunctions/pixelUtils.js\";import{requirePE as m,load as l,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{convertVectorFieldData as c}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as p}from\"./rasterTransforms/utils.js\";import u from\"../../renderers/support/RasterSymbolizer.js\";import{createStreamlinesMesh as d}from\"../../views/2d/engine/flow/dataUtils.js\";import S from\"../../geometry/Extent.js\";class h{convertVectorFieldData(e){const o=t.fromJSON(e.pixelBlock),s=c(o,e.type);return Promise.resolve(r(s)&&s.toJSON())}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=t.fromJSON(e.pixelBlock),e.extent=e.extent?S.fromJSON(e.extent):null;const o=this.symbolizer.symbolize(e);return Promise.resolve(r(o)&&o.toJSON())}async updateSymbolizer(r){var e;this.symbolizer=u.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===(null==(e=this.symbolizer)?void 0:e.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(e){const o=this.symbolizer.simpleStretch(t.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(o)&&o.toJSON())}estimateStatisticsHistograms(r){const e=s(t.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(t.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,null==r?void 0:r.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const e=r.srcPixelBlocks.map((r=>r?new t(r):null)),o=a(e,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo});if(!r.coefs)return o&&o.toJSON();const s=n(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation);return s&&s.toJSON()}async createStreamlinesMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),width:r.flowData.width,height:r.flowData.height},{vertexData:o,indexData:s}=await d(r.rendererSettings,t,e.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:s.buffer},transferList:[o.buffer,s.buffer]}}async getProjectionOffsetGrid(r){const t=S.fromJSON(r.projectedExtent),o=S.fromJSON(r.srcBufferExtent);let s=null;r.datumTransformationStemps&&(s=new e({steps:r.datumTransformationStemps})),m(t.spatialReference,o.spatialReference,s)&&await l();const i=r.rasterTransform?p(r.rasterTransform):null;return f({...r,projectedExtent:t,srcBufferExtent:o,datumTransformation:s,rasterTransform:i})}}export{h as default};\n"],"names":["h","e","o","t","pixelBlock","s","c","type","Promise","resolve","r","toJSON","data","options","extent","S","this","symbolizer","symbolize","u","symbolizerJSON","histograms","rendererJSON","simpleStretch","srcPixelBlock","stretchParams","i","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","a","srcMosaicSize","blockWidths","alignmentInfo","coefs","n","destDimension","sampleSpacing","interpolation","Float32Array","flowData","buffer","width","height","d","rendererSettings","signal","vertexData","indexData","result","vertexBuffer","indexBuffer","transferList","projectedExtent","srcBufferExtent","datumTransformationStemps","steps","m","spatialReference","l","rasterTransform","p","f","datumTransformation"],"sourceRoot":""}