"use strict";(globalThis.webpackChunkfield_sustainability_helper=globalThis.webpackChunkfield_sustainability_helper||[]).push([[4280],{8229:(e,t,s)=>{function i(){return new Float32Array(3)}function r(e){const t=new Float32Array(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t}function n(e,t,s){const i=new Float32Array(3);return i[0]=e,i[1]=t,i[2]=s,i}function o(){return i()}function a(){return n(1,1,1)}function l(){return n(1,0,0)}function h(){return n(0,1,0)}function d(){return n(0,0,1)}s.d(t,{a:()=>r,c:()=>i,f:()=>n});const c=o(),u=a(),f=l(),p=h(),m=d();Object.freeze({__proto__:null,create:i,clone:r,fromValues:n,createView:function(e,t){return new Float32Array(e,t,3)},zeros:o,ones:a,unitX:l,unitY:h,unitZ:d,ZEROS:c,ONES:u,UNIT_X:f,UNIT_Y:p,UNIT_Z:m})},47991:(e,t,s)=>{s.d(t,{U:()=>h});var i=s(65156),r=s(376),n=s(66504),o=s(77981),a=s(76335),l=s(92975);function h(e){if(!e)return null;let t=null;const s=e.spatialReference,i=(0,l.C5)(s);if(!i)return"toJSON"in e?e.toJSON():e;const h=(0,l.sS)(s)?102100:4326,u=a.UZ[h].maxX,f=a.UZ[h].minX,p=a.UZ[h].plus180Line,g=a.UZ[h].minus180Line;let _;const x="toJSON"in e?e.toJSON():e;if((0,o.wp)(x))_=c(x,u,f);else if((0,o.aW)(x))x.points=x.points.map((e=>c(e,u,f))),_=x;else if((0,o.YX)(x))_=d(x,i);else if((0,o.oU)(x)||(0,o.l9)(x)){const e=y;(0,r.$P)(e,x);const s={xmin:e[0],ymin:e[1],xmax:e[2],ymax:e[3]},i=(0,a.XZ)(s.xmin,f)*(2*u),o=0===i?x:function(e,t){const s=(0,a.x3)(e);for(const i of s)for(const e of i)e[0]+=t;return e}(x,i);s.xmin+=i,s.xmax+=i,(0,n.jQ)(s,p)&&s.xmax!==u||(0,n.jQ)(s,g)&&s.xmin!==f?t=o:_=o}else _=x;return null!==t?(new m).cut(t,u):_}function d(e,t){if(!t)return e;const s=function(e,t){const s=[],{ymin:i,ymax:r}=e,n=e.xmax-e.xmin,o=e.xmin,a=e.xmax;let l;const[h,d]=t.valid;l=u(e.xmin,t);const c=l.x,p=l.frameId;l=u(e.xmax,t);const m=l.x,y=l.frameId,g=c===m&&n>0;if(n>2*d){const e={xmin:o<a?c:m,ymin:i,xmax:d,ymax:r},t={xmin:h,ymin:i,xmax:o<a?m:c,ymax:r},n={xmin:0,ymin:i,xmax:d,ymax:r},l={xmin:h,ymin:i,xmax:0,ymax:r},u=[],g=[];f(e,n)&&u.push(p),f(e,l)&&g.push(p),f(t,n)&&u.push(y),f(t,l)&&g.push(y);for(let s=p+1;s<y;s++)u.push(s),g.push(s);s.push({extent:e,frameIds:[p]},{extent:t,frameIds:[y]},{extent:n,frameIds:u},{extent:l,frameIds:g})}else c>m||g?s.push({extent:{xmin:c,ymin:i,xmax:d,ymax:r},frameIds:[p]},{extent:{xmin:h,ymin:i,xmax:m,ymax:r},frameIds:[y]}):s.push({extent:{xmin:c,ymin:i,xmax:m,ymax:r},frameIds:[p]});return s}(e,t).map((e=>e.extent));return s.length<2?s[0]||e:s.length>2?(e.xmin=t.valid[0],e.xmax=t.valid[1],e):{rings:s.map((e=>[[e.xmin,e.ymin],[e.xmin,e.ymax],[e.xmax,e.ymax],[e.xmax,e.ymin],[e.xmin,e.ymin]]))}}function c(e,t,s){if(Array.isArray(e)){const i=e[0];if(i>t){const s=(0,a.XZ)(i,t);e[0]=i+s*(-2*t)}else if(i<s){const t=(0,a.XZ)(i,s);e[0]=i+t*(-2*s)}}else{const i=e.x;if(i>t){const s=(0,a.XZ)(i,t);e.x+=s*(-2*t)}else if(i<s){const t=(0,a.XZ)(i,s);e.x+=t*(-2*s)}}return e}function u(e,t){const[s,i]=t.valid,r=2*i;let n,o=0;return e>i?(n=Math.ceil(Math.abs(e-i)/r),e-=n*r,o=n):e<s&&(n=Math.ceil(Math.abs(e-s)/r),e+=n*r,o=-n),{x:e,frameId:o}}function f(e,t){const{xmin:s,ymin:i,xmax:r,ymax:n}=t;return p(e,s,i)&&p(e,s,n)&&p(e,r,n)&&p(e,r,i)}function p(e,t,s){return t>=e.xmin&&t<=e.xmax&&s>=e.ymin&&s<=e.ymax}class m{cut(e,t){let s;if(e.rings)this.closed=!0,s=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,s=e.paths,this.minPts=2}const i=s.length,r=-2*t;for(let n=0;n<i;n++){const e=s[n];if(e&&e.length>=this.minPts){const t=[];for(const s of e)t.push([s[0]+r,s[1]]);s.push(t)}}return this.closed?e.rings=s:e.paths=s,e}}const y=(0,i.Ue)()},82022:(e,t,s)=>{s.d(t,{Z:()=>g});var i=s(80391),r=s(22753),n=s(23588),o=s(15245),a=s(8229),l=s(50689),h=s(87422),d=s(46640),c=s(44070),u=s(8548),f=s(45412);const p=Math.PI/180;class m extends h.s{constructor(e){super(),this._dvsMat3=(0,n.c)(),this._localOrigin={x:0,y:0},this._getBounds=e}destroy(){this._vao&&(this._vao.dispose(!0),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program&&(this._program.dispose(),this._program=null)}doRender(e){const{context:t}=e,s=this._getBounds();if(s.length<1)return;this._createShaderProgram(t),this._updateMatricesAndLocalOrigin(e),this._updateBufferData(t,s),t.setBlendingEnabled(!0),t.setDepthTestEnabled(!1),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1),t.setBlendFunction(u.zi.ONE,u.zi.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0);const i=this._program;t.bindVAO(this._vao),t.useProgram(i),i.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),t.gl.lineWidth(1),t.drawElements(u.MX.LINES,8*s.length,u.g.UNSIGNED_INT,0),t.bindVAO()}_createTransforms(){return{dvs:(0,n.c)()}}_createShaderProgram(e){if(this._program)return;this._program=e.programCache.acquire("precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }","precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }",y().attributes)}_updateMatricesAndLocalOrigin(e){const{state:t}=e,{displayMat3:s,size:i,resolution:n,pixelRatio:h,rotation:d,viewpoint:c}=t,u=p*d,{x:f,y:m}=c.targetGeometry,y=(0,l.or)(f,t.spatialReference);this._localOrigin.x=y,this._localOrigin.y=m;const g=h*i[0],_=h*i[1],x=n*g,v=n*_,b=(0,r.b)(this._dvsMat3);(0,r.m)(b,b,s),(0,r.c)(b,b,(0,o.f)(g/2,_/2)),(0,r.d)(b,b,(0,a.f)(i[0]/x,-_/v,1)),(0,r.r)(b,b,-u)}_updateBufferData(e,t){const{x:s,y:i}=this._localOrigin,r=8*t.length,n=new Float32Array(r),o=new Uint32Array(8*t.length);let a=0,l=0;for(const h of t)h&&(n[2*a+0]=h[0]-s,n[2*a+1]=h[1]-i,n[2*a+2]=h[0]-s,n[2*a+3]=h[3]-i,n[2*a+4]=h[2]-s,n[2*a+5]=h[3]-i,n[2*a+6]=h[2]-s,n[2*a+7]=h[1]-i,o[l+0]=a+0,o[l+1]=a+3,o[l+2]=a+3,o[l+3]=a+2,o[l+4]=a+2,o[l+5]=a+1,o[l+6]=a+1,o[l+7]=a+0,a+=4,l+=8);if(this._vertexBuffer?this._vertexBuffer.setData(n.buffer):this._vertexBuffer=c.f.createVertex(e,u.l1.DYNAMIC_DRAW,n.buffer),this._indexBuffer?this._indexBuffer.setData(o):this._indexBuffer=c.f.createIndex(e,u.l1.DYNAMIC_DRAW,o),!this._vao){const t=y();this._vao=new f.U(e,t.attributes,t.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const y=()=>(0,d.cM)("bounds",{geometry:[{location:0,name:"a_position",count:2,type:u.g.FLOAT}]});class g extends i.T{constructor(e){super(e),this.hasHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer&&(this._boundsRenderer.destroy(),this._boundsRenderer=null)}enableRenderingBounds(e){this._boundsRenderer=new m(e),this.requestRender()}get hasLabels(){return!1}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){e.clear(),this.contains(e)||this.addChild(e)}_renderChildren(e,t){for(const s of this.children)s.isReady&&s.hasData&&(s.commit(e),e.context.setStencilFunction(u.wb.EQUAL,s.stencilRef,255),s._displayList.replay(e,s,t))}}},34035:(e,t,s)=>{s.d(t,{Z:()=>He});var i=s(27366),r=s(85015),n=s(75746),o=s(41691),a=s(93169),l=s(92026),h=s(66978),d=s(49861),c=(s(63780),s(25243),s(69912)),u=s(78952),f=s(65156),p=s(69662),m=s(77981),y=s(47991),g=s(92975),_=s(19995),x=s(78915),v=s(61574),b=s(94109);const D=-1;class C{constructor(){this._dirties=[{vertexFrom:D,vertexCount:D,indexFrom:D,indexCount:D,allDirty:!1},{vertexFrom:D,vertexCount:D,indexFrom:D,indexCount:D,allDirty:!1},{vertexFrom:D,vertexCount:D,indexFrom:D,indexCount:D,allDirty:!1},{vertexFrom:D,vertexCount:D,indexFrom:D,indexCount:D,allDirty:!1},{vertexFrom:D,vertexCount:D,indexFrom:D,indexCount:D,allDirty:!1}]}hasDirty(){return this._dirties.some((e=>e.indexCount!==D||e.allDirty))}markAllClean(){for(const e of this._dirties)e.indexFrom=D,e.indexCount=D,e.vertexFrom=D,e.vertexCount=D,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:o}=this._dirties[t],a={};let l,h=!1;(o||n!==D&&r>0)&&(a.geometry={count:r,from:n,allDirty:o},h=!0),(o||i!==D&&s>0)&&(l={count:s,from:i,allDirty:o},h=!0),h&&e({indices:l,vertices:a},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==D){const e=Math.min(i.indexFrom,r),t=Math.max(i.indexFrom+i.indexCount,r+n)-e;i.indexFrom=e,i.indexCount=t}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,o=i;if(!r.allDirty)if(r.vertexCount!==D){const e=Math.min(r.vertexFrom,n),t=Math.max(r.vertexFrom+r.vertexCount,n+o)-e;r.vertexFrom=e,r.vertexCount=t}else r.vertexFrom=n,r.vertexCount=o}}class w{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const o=null!==r?r.from+r.count:0,a=null!==n?n.from:this._parent._size;e>=o&&e+t<=a?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class B{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new w(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const e=null!==t.prev?this._freeHead:t.next;B._removeRange(t),this._freeHead=e}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const e=r.from,t=r.count;B._fuse(r,i),B._removeRange(i),this._bookKeeper.rangeResized(r,e,t),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const e=s.from,t=s.count;B._fuse(s,r),B._removeRange(r),this._bookKeeper.rangeResized(s,e,t),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var T=s(46640);const F=["FILL","LINE","MARKER","TEXT","LABEL"];class I{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new B(i):null,idxFreeList:i?new B(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const t in e[r])this._freeListsAndStorage[r].vertexBuffers[t]={data:i?(0,T.C$)(i,e[r][t]):null,stride:e[r][t]}}}static fromTileData(e,t){const s=function(e){const t=e.getStrides(),s={};for(let i=0;i<t.length;i++)s[F[i]]=t[i];return s}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const a of n)for(const e of a.displayRecords)i[e.geometryType]=Math.max(i[e.geometryType],e.vertexFrom+e.vertexCount),r[e.geometryType]=Math.max(r[e.geometryType],e.indexFrom+e.indexCount);const o=new I(s,e.tileDisplayData.displayList,t,null);for(let a=0;a<e.tileBufferData.geometries.length;++a){const t=i[a],s=r[a],n=e.tileBufferData.geometries[a],l=F[a],h=o._storageFor(l),d=e.tileBufferData.geometries[a].indexBuffer;let c;h.indexBuffer=d,h.idxFreeList=new B(d.length),h.idxFreeList.allocate(s);for(const i in n.vertexBuffer){const t=e.tileBufferData.geometries[a].vertexBuffer[i];h.vertexBuffers[i].data=t.data,h.vertexBuffers[i].stride=t.stride;const s=(0,T.Y8)(t.stride),r=t.data.length*s/t.stride;c||(c=r)}h.vtxFreeList=new B(c),h.vtxFreeList.allocate(t)}return o}delete(e){const t=F[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=F[e.geometryType];let o,a;e.meshData=null,void 0===e.vertexFrom?(a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),a=t.vertexCount,o=this._allocateVertices(n,a)):t.vertexCount===e.vertexCount?(o=e.vertexFrom,a=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),o=e.vertexFrom,a=t.vertexCount);let l,h,d,c=!0;if(void 0===e.indexFrom?(l=r,d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount>e.indexCount?(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),d=t.indexCount,h=this._allocateIndices(n,d)):t.indexCount===e.indexCount?(c=!1,h=e.indexFrom,d=e.indexCount):(l=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),h=e.indexFrom,d=t.indexCount),-1!==o&&-1!==h){const r=this._storageFor(n);if((0,T.wO)(o,h,r.vertexBuffers,r.indexBuffer,t,s,i),e.vertexFrom=o,e.indexFrom=h,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return c&&this._displayList.addToList(e,l),!0}return-1!==o&&this._freeVertices(n,o,a),-1!==h&&this._freeIndices(n,h,d),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=F[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const o=this._allocateIndices(r,e.indexCount);if(-1===o)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,o,e.indexCount),!1;const a=this._storageFor(r);if((0,T.wO)(n,o,a.vertexBuffers,a.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=o,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in s)this._dirtyMap.markDirtyVertices(e.geometryType,t,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var R=s(44070),M=s(8548),L=s(45412);class S{constructor(e){this.geometryMap=(0,T.Mk)((()=>({indexBuffer:R.f.createIndex(e,M.l1.STATIC_DRAW),vao:null})),((t,s)=>({vertexBuffer:R.f.createVertex(e,T.mR[s])})))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const e in t.buffers)t.buffers[e]&&t.buffers[e].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{getVAO(e,s,i){if(!t.data.vao){const r={};for(const e in t.buffers)r[e]=t.buffers[e].data.vertexBuffer;t.data.vao=new L.U(e,i,s,r,t.data.indexBuffer)}return t.data.vao}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach(((t,s)=>{this._upload(t,s,e)}))}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const e in i){const r=i[e];r.allDirty?this._uploadVertices(s,t,e):null!=r.from&&null!=r.count&&this._uploadVertices(s,t,e,r.from,r.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const o=e.geometries[t].vertexBuffer[s];if(!o)return;const a=o.stride,l=o.data.buffer;n.buffers[s]&&l.byteLength>0&&(null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(l,i*a,i*a,(i+r)*a):n.buffers[s].data.vertexBuffer.setData(l))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const n=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&n.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(n,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(n))}}var A=s(98774);class z extends A.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new C}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new C,this._dispRecStore=I.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new S(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=I.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);for(const r of i){const e=this._data.tileDisplayData.displayObjectRegistry.get(r);if(e){this._data.tileDisplayData.displayList.removeFromList(e.displayRecords);for(const s of e.displayRecords)this._dispRecStore.delete(s);this._data.tileDisplayData.displayObjectRegistry.delete(r);const t=this._data.tileDisplayData.displayObjects.indexOf(e);this._data.tileDisplayData.displayObjects.splice(t,1)}}for(const r of s){let s,i=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(i){const e=i.displayRecords;i.set(r),i.displayRecords=e;const t=i.displayRecords.length;for(let s=0;s<t;++s){const e=i.displayRecords[s],t=r.displayRecords[s];(s>=r.displayRecords.length||e.geometryType!==t.geometryType||e.symbolLevel!==t.symbolLevel||e.zOrder!==t.zOrder||e.materialKey!==t.materialKey)&&(this._dispRecStore.delete(i.displayRecords[s]),s<r.displayRecords.length&&(i.displayRecords[s]=void 0))}i.displayRecords.length=r.displayRecords.length}else{let e;i=r.copy(),i.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,i);const t=this._data.tileDisplayData.displayObjects;if(null!=i.insertAfter)if(s={},i.insertAfter>=0){const s=this._data.tileDisplayData.displayObjectRegistry.get(i.insertAfter);s?(e=t.indexOf(s)+1,e<t.length?t.splice(e,0,i):(t.push(i),e=t.length)):(t.push(i),e=t.length)}else t.unshift(i),e=0;else t.push(i),e=t.length;if(s){const i=r.displayRecords.length>0?1:0;let n=0;for(let r=e-1;r>=0&&n<i;--r)for(let e=t[r].displayRecords.length-1;e>=0&&n<i;--e){const i=t[r].displayRecords[e],o=this._data.tileDisplayData.displayList.getDPInfoType();s[o]||(s[o]=i,++n)}}}const n=r.displayRecords.length;for(let o=0;o<n;++o){const n=r.displayRecords[o];let a=i.displayRecords[o];a?(a.meshData=n.meshData,a.materialKey=n.materialKey):(a=n.copy(),a.vertexFrom=void 0,a.indexFrom=void 0,i.displayRecords[o]=a);const l=n.geometryType,h=this._data.tileDisplayData.displayList.getDPInfoType(),d=e.addOrUpdate.tileBufferData.geometries[l],c=d.vertexBuffer,u=d.indexBuffer;let f;s&&(f=s[h]?this._data.tileDisplayData.displayList.splitAfter(s[h]):-1),t=this._dispRecStore.setMeshData(a,n,c,u,f)&&t,s&&null!=a.indexFrom&&null!=a.indexFrom&&(s[h]=a)}}return t}}class O{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class G{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new G;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const e in s.vertexBuffer){const{data:t,stride:r}=s.vertexBuffer[e];i.vertexBuffer[e]={data:t.slice(),stride:r}}}return e}static deserialize(e){const t=new G;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,T.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var U=s(80613);function V(e,t,s){for(var i=arguments.length,r=new Array(i>3?i-3:0),n=3;n<i;n++)r[n-3]=arguments[n];t<e.length?e.splice(t,s,...r):e.push(...r)}const P=new Map;P.set(U.jx.MAP,[U.LW.FILL,U.LW.LINE,U.LW.MARKER,U.LW.TEXT]),P.set(U.jx.LABEL,[U.LW.LABEL]),P.set(U.jx.LABEL_ALPHA,[U.LW.LABEL]);class k{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const i=r.geometryDPInfo.unified;if(i)for(const r of i){const i=e.painter.getGeometryBrush(r.geometryType),n=t.getGeometry(r.geometryType),o={geometryType:r.geometryType,materialKey:r.materialKey,indexFrom:r.indexFrom,indexCount:r.indexCount,target:n};i.prepareState(e,t),i.drawGeometry(e,t,o,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new k;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const s=t[r];if(s.geometryType===e.geometryType&&i>s.indexFrom&&i<=s.indexFrom+s.indexCount){if(i<s.indexFrom+s.indexCount){const e=new j;e.geometryType=s.geometryType,e.materialKey=s.materialKey,e.indexFrom=i,e.indexCount=s.indexFrom+s.indexCount-i,t.splice(r+1,0,e),s.indexCount=i-s.indexFrom}return r}}}_addToList(e,t){const s=e.symbolLevel,i=e.zOrder,r=this._getDisplayList(s,i),n=null!=t?t:r.length-1,o=n>=0&&n<r.length?r[n]:null;if(null!==o&&o.materialKey===e.materialKey&&o.indexFrom+o.indexCount===e.indexFrom&&o.geometryType===e.geometryType)o.indexCount+=e.indexCount;else{const t=new j;t.indexFrom=e.indexFrom,t.indexCount=e.indexCount,t.materialKey=e.materialKey,t.geometryType=e.geometryType,V(r,n+1,0,t)}}_removeFromList(e){const t=e.symbolLevel,s=e.zOrder,i=this._getDisplayList(t,s),r=i.length;let n;for(let o=0;o<r;++o){const t=i[o];if(e.indexFrom+e.indexCount>t.indexFrom&&e.indexFrom<t.indexFrom+t.indexCount&&t.geometryType===e.geometryType){n=o;break}}if(void 0!==n){const t=i[n];if(e.indexFrom===t.indexFrom)return t.indexCount-=e.indexCount,t.indexFrom+=e.indexCount,0===t.indexCount&&V(i,n,1),n-1;if(e.indexFrom+e.indexCount===t.indexFrom+t.indexCount)return t.indexCount-=e.indexCount,0===t.indexCount?(V(i,n,1),n-1):n;{const s=t.indexFrom,r=e.indexFrom-t.indexFrom,o=e.indexCount,a=t.indexFrom+t.indexCount-(e.indexFrom+e.indexCount);t.indexCount=r;const l=new j;return l.geometryType=t.geometryType,l.materialKey=t.materialKey,l.indexFrom=s+r+o,l.indexCount=a,V(i,n+1,0,l),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let o=0;o<i;o++)if(this.symbolLevels[o].symbolLevel===e){s=this.symbolLevels[o];break}let r;s||(s=new E,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let o=0;o<n;o++)if(s.zLevels[o].zLevel===t){r=s.zLevels[o];break}return r||(r=new K,r.geometryDPInfo=new Z,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class j{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new j;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Z{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Z;return e.fill=this.fill&&this.fill.map((e=>e.clone())),e.line=this.line&&this.line.map((e=>e.clone())),e.marker=this.marker&&this.marker.map((e=>e.clone())),e.text=this.text&&this.text.map((e=>e.clone())),e.label=this.label&&this.label.map((e=>e.clone())),e.unified=this.unified&&this.unified.map((e=>e.clone())),e}}class K{constructor(){this.geometryDPInfo=new Z}clone(){const e=new K;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class E{constructor(){this.zLevels=[]}clone(){const e=new E;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class N{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class q{constructor(e,t,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new q(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new N;for(const r in t){const s=t[r].stride,n=t[r].data,o=[],a=(0,T.Y8)(s);for(let t=0;t<s*e.vertexCount/a;++t)o[t]=n[t+s*e.vertexFrom/a];i.vertexData.set(r,o)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new N;for(const s in e){const t=e[s].stride,i=e[s].data,r=[],n=(0,T.Y8)(t);for(let e=0;e<t*this.vertexCount/n;++e)r[e]=i[e+t*this.vertexFrom/n];this.meshData.vertexData.set(s,r)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const r in t){const s=t[r].stride,i=this.meshData.vertexData.get(r),n=t[r].data,o=(0,T.Y8)(s);for(let t=0;t<s*this.meshData.vertexCount/o;++t)n[t+s*e/o]=i[t]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new q(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function H(e,t){if(null!==t){e.push(t.length);for(const s of t)s.serialize(e);return e}e.push(0)}class W{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new W(this.id);return e.set(this),e}clone(){const e=new W(this.id);return e.displayRecords=this.displayRecords.map((e=>e.clone())),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),H(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new W(t),i={id:t};return s.displayRecords=function(e,t,s){const i=e.readInt32(),r=new Array(i);for(let n=0;n<r.length;n++)r[n]=t.deserialize(e,s);return r}(e,q,i),s}}class X{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new k;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new X;return this.displayObjects&&(e.displayObjects=this.displayObjects.map((e=>e.clone()))),e}serialize(e){return H(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const t=W.deserialize(e);s[r]=t,i.set(t.id,t)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new X;return t._deserializeObjects(e),t}}var Y=s(50477);class Q{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,T.e2)(e.data,e.stride),s=e.stride;return new Q(t,s)}static fromVertexVector(e){const t=(0,T.e2)(e.data.buffer(),e.stride),s=e.stride;return new Q(t,s)}}class J{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=Q.decode(e.namedBuffers[r]);return new J(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,T.e2)(e.vertices,e.stride),r=e.stride,n={geometry:new Q(i,r)};return new J(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const r in e.namedVectors)i[r]=Q.fromVertexVector(e.namedVectors[r]);return new J(t,s,i)}}var $=s(27446);class ee{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const e=this.stride/4,t=this.data.length/e;return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class te{constructor(e,t,s){this.geometryType=e,this.indexVector=new $.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,T.$_)(e,s);for(const r in i){const e=i[r];let s;switch(e%4){case 0:case 2:s=new $.Z(Uint32Array,e*t);break;case 1:case 3:s=new $.Z(Uint8Array,e*t)}this.namedVectors[r]=new ee(s,e)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const r in this.namedVectors){const e=this.namedVectors[r];i[r]={},e.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=J.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const se=new O,ie=new O;function re(e,t){const s={};for(const i in e){const r={data:(0,T.C$)(t,e[i]),stride:e[i]};s[i]=r}return s}class ne{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){se.reset();const e=function(e){const t=[[],[],[],[],[]],s=e;for(const i of s)for(const e of i.displayRecords)t[e.geometryType].push(e);return t}(this.tileDisplayData.displayObjects);for(const i of e)for(const e of i)e&&se.needMore(e.geometryType,e.meshData?e.meshData.vertexCount:e.vertexCount,e.meshData?e.meshData.indexData.length:e.indexCount);const t=e.length,s=new G;for(let i=0;i<t;++i){s.geometries[i].indexBuffer=new Uint32Array(Math.round(1.5*se.indicesFor(i)));const e=[];for(const s in this.tileBufferData.geometries[i].vertexBuffer)e.push(this.tileBufferData.geometries[i].vertexBuffer[s].stride);const t=ne._computeVertexAlignment(e),r=Math.round(1.5*se.verticesFor(i)),n=ne._align(r,t);for(const o in this.tileBufferData.geometries[i].vertexBuffer){const e=this.tileBufferData.geometries[i].vertexBuffer[o].stride;s.geometries[i].vertexBuffer[o]={stride:e,data:(0,T.C$)(n,e)}}}ie.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const t=e[i];for(const e of t){if(e.meshData)e.writeMeshDataToBuffers(ie.verticesFor(i),s.geometries[i].vertexBuffer,ie.indicesFor(i),s.geometries[i].indexBuffer),e.meshData=null;else{const t=this.tileBufferData.geometries[i].vertexBuffer,r=this.tileBufferData.geometries[i].indexBuffer,n=s.geometries[i].vertexBuffer,o=s.geometries[i].indexBuffer,a=ie.verticesFor(i),l=ie.indicesFor(i);(0,T.wO)(a,l,n,o,e,t,r),e.vertexFrom=a,e.indexFrom=l}ie.needMore(i,e.vertexCount,e.indexCount)}}for(const i of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(i.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new ne;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let s=0;for(let i=0;i<t;i++)s=Math.max(s,e[i].displayRecords.length);return 2*(12*e.length+e.length*s*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new $.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,T.Z_)((t=>{const r=e.data[t];if((0,l.pC)(r)){const e=Y.$.from(r.records).getCursor();for(;e.next();){const s=e.id,r=e.materialKey,n=e.indexFrom,o=e.indexCount,a=e.vertexFrom,l=e.vertexCount,h=i.get(s),d=new q(s,t,r);d.indexFrom=n,d.indexCount=o,d.vertexFrom=a,d.vertexCount=l,h.displayRecords.push(d)}s[t]=J.fromVertexData(r,t)}else s[t]=new te(t,0,{fill:"default"}).intoBuffers()})),ne.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new ne,s=new X,i=new G;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const t=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=t.indexBuffer,i.geometries[r].vertexBuffer=t.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new ne;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new ne;s.tileDisplayData=new X,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const l of e)for(const e of l.displayRecords)n[e.geometryType].push(e),i[e.geometryType]+=e.meshData.vertexCount,r[e.geometryType]+=e.meshData.indexData.length;const o=new G,a=function(e){return[e.fill||{},e.line||{},e.icon||{},e.text||{},e.label||{}]}(t);for(let l=0;l<5;l++){const e=new Uint32Array(r[l]),t=re(a[l],i[l]);q.writeAllMeshDataToBuffers(n[l],t,e),o.geometries[l]={indexBuffer:e,vertexBuffer:t}}return s.tileBufferData=o,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var oe=s(72774),ae=s(74017),le=s(61909),he=s(69813),de=s(69534),ce=s(45367),ue=s(56078),fe=s(83406),pe=s(92010),me=s(28941);class ye extends me.i{constructor(e,t){super(e,t,null)}static from(e){const t=pe.s.createInstance(),s=[],i=e.filter((e=>!!e.geometry));for(const r of i){const e=(0,m.Ji)(r.geometry);(0,fe.E7)(s,[r],e,!1,!1,"uid")}return new ye(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new ye(this.instance,this._features);return this.copyInto(e),e}}var ge=s(17842),_e=s(31581),xe=s(376),ve=s(50689),be=s(76335),De=s(2146),Ce=s(4954),we=s(58971),Be=s(80457),Te=s(95857);const Fe=new Be.Z,Ie=new Be.Z,Re="esriGeometryPolyline";function Me(e){e.coords.length=0,e.lengths.length=0}class Le{constructor(){this.bounds=(0,f.Ue)(),this.graphic=null}static acquire(){let e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,s=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,n=arguments.length>4?arguments[4]:void 0;return 0===Le._pool.length?e=new Le:(e=Le._pool.pop(),this._set.delete(e)),e.acquire(t,s,i,r,n),e}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,m.oU)(e.geometry)){const s=e.symbol;if((0,l.Wi)(s))return null;if((0,Te.yA)(s.type)||(0,Te.ab)(s.type)){const s=(0,Ce.tO)(e.geometry);return(0,we.RF)(t,{},{x:s[0],y:s[1]},!1,!1)}}return null}acquire(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1?arguments[1]:void 0,s=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry;if((0,m.oU)(r)){const t=r.rings;if(1===t.length&&2===t[0].length)return(0,we.ym)(e,{paths:[[t[0][0],t[0][1]]]})}else{if((0,m.l9)(r))return Me(Fe),Me(Ie),(0,fe.u0)(Fe,r),(0,fe.zj)(Ie,Fe,r.hasZ,r.hasM,Re,e.scale[0]),(0,fe.Nh)(Fe,Ie,r.hasZ,r.hasM,Re,e),(0,fe.J6)(Fe,r.hasZ,r.hasM);if((0,m.aW)(r)){const n=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),[o,a]=(0,be.uS)(s),l=a-o,h=r.points.filter((e=>{if(e[0]+n>a||e[0]-n<o){const s=[...e];return e[0]+n>a?s[0]-=l:s[0]+=l,(0,f.Zm)(t,e,n)||(0,f.Zm)(t,s,n)}return(0,f.Zm)(t,e,n)}));return 0===h.length?{points:h}:(0,we.ym)(e,{points:h})}}return(0,we.ym)(e,this.geometry)}}Le._pool=[],Le._set=new Set;const Se={minX:0,minY:0,maxX:0,maxY:0},Ae=(0,f.Ue)(),ze=1e-5;function Oe(e,t,s,i,r){return Se.minX=t,Se.minY=s,Se.maxX=i,Se.maxY=r,e.search(Se)}function Ge(e){return{minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}}class Ue{constructor(e,t,s,i,r,n,o){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=o,this._index=(0,_e.r)(9,Ge),this._itemByGraphic=new Map,this._inflatedSizeHelper=new x.IV,this._tileInfoView=e,this._uidFieldName=s;const a=e.getClosestInfoForScale(t);a&&(this._resolution=this._tileInfoView.getTileResolution(a.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new De.Tu(e)}hitTest(e,t,s,i,r){e=(0,ve.or)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;Ae[0]=e-n,Ae[1]=t-n,Ae[2]=e+n,Ae[3]=t+n;const o=.5*i*(s+Te.y1),a=Oe(this._index,e-o,t-o,e+o,t+o);if(!a||0===a.length)return[];const l=[],h=(0,f.Ue)(),d=(0,f.Ue)();for(const p of a){const{geometry:e,symbolResource:t}=p;this._getSymbolBounds(h,t,e,d,r),d[3]=d[2]=d[1]=d[0]=0,(0,f.kK)(h,Ae)&&p.graphic.visible&&l.push(p)}if(0===l.length)return[];const c=this._hittestDrawHelper,u=[];for(const f of l){const{geometry:e,symbolResource:t}=f,{hash:s,textInfo:n}=t,o=this._hashToCIM.get(s);o&&c.hitTest(Ae,o.symbol,e,n,r,i)&&u.push(f)}return u.sort(Ve),u.map((e=>e.graphic))}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort(((e,t)=>e.zorder-t.zorder)),i[0].insertAfter=-1;for(let d=1;d<i.length;d++)i[d].insertAfter=i[d-1].graphic.uid;i.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),s.sort(((e,t)=>e.uid-t.uid));let r,n=0,o=0;const a=t.resolution,l=[],h={originPosition:"upperLeft",scale:[a,a],translate:[t.bounds[0],t.bounds[3]]};for(const d of s){for(o=-2;n<i.length;)if(r=i[n],n++,d.uid===r.graphic.uid){o=r.insertAfter;break}if(!r.geometry||-2===o)continue;const s=r.getGeometryQuantized(h,t.bounds,this._tileInfoView.spatialReference,a),c={...r.graphic.attributes};c[this._uidFieldName]=d.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),l.push({centroid:Le.getCentroidQuantized(r,h),geometry:s,attributes:c,symbol:r.symbol,groupId:r.groupId,insertAfter:o,zorder:r.zorder})}return l.sort(((e,t)=>e.zorder-t.zorder)),l}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter((e=>e.graphic.visible)).map((e=>e.bounds))}addOrModify(e,t,s){if(!e||(0,l.Wi)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=Le.acquire(e,t,s,(0,l.pC)(r)?r:null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,f.d9)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return(0,l.pC)(n)&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[i,r]of t){const e=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&(0,l.pC)(e)&&(r.bounds=e,s.push(r))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,o=this._tileInfoView.spatialReference,{bounds:a,resolution:l}=r;let h,d,c,u;s.sort(((e,t)=>e.zorder-t.zorder));for(let f=0;f<s.length;f++){c=s[f],h=c.graphic,d=c.getGeometryQuantized(i,a,o,l),u=0===f?-1:s[f-1].graphic.uid;const r={...c.graphic.attributes};r[n]=h.uid,null==c.groupId&&(c.groupId=t.createTemplateGroup(c.symbol,null)),e.push({centroid:Le.getCentroidQuantized(c,i),geometry:d,attributes:r,symbol:c.symbol,groupId:c.groupId,insertAfter:u,zorder:c.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=(0,be.uS)(t),n=Math.abs(s[2]-r)<ze,o=Math.abs(s[0]-i)<ze;if((!n||!o)&&(n||o)){const t=e.resolution;let o;o=(0,f.Ue)(n?[i,s[1],i+t*Te.y1,s[3]]:[r-t*Te.y1,s[1],r,s[3]]);const a=Oe(this._index,s[0],s[1],s[2],s[3]),l=Oe(this._index,o[0],o[1],o[2],o[3]);return[...new Set([...a,...l])]}}return Oe(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,f.Ue)()),(0,xe.$P)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:e,textInfo:s}=t,n=this._hashToCIM.get(e);if(!n)return null;i||(i=[0,0,0,0]);const o=this._inflatedSizeHelper.getSymbolInflateSize(i,n.symbol,this._cimResourceManager,r,s);i[0]=(0,ge.F2)(o[0]),i[1]=(0,ge.F2)(o[1]),i[2]=(0,ge.F2)(o[2]),i[3]=(0,ge.F2)(o[3])}const n=this._resolution,o=x.IV.safeSize(i);return e[0]-=o*n,e[1]-=o*n,e[2]+=o*n,e[3]+=o*n,e}}const Ve=(e,t)=>{const s=(0,Te.eT)(e.graphic),i=(0,Te.eT)(t.graphic);return s===i?t.zorder-e.zorder:s-i};var Pe=s(98125),ke=s(79056);const je=e=>{let t=class extends((0,ke.I)(e)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,i._)([(0,d.Cb)()],t.prototype,"graphics",void 0),(0,i._)([(0,d.Cb)()],t.prototype,"renderer",void 0),(0,i._)([(0,d.Cb)()],t.prototype,"updating",void 0),(0,i._)([(0,d.Cb)()],t.prototype,"view",void 0),t=(0,i._)([(0,c.j)("esri.views.layers.GraphicsView")],t),t};var Ze=s(90316),Ke=s(85164);const Ee=(0,a.Z)("esri-2d-graphic-debug");function Ne(e,t,s){if(s.has(e))return s.get(e);const i={tile:t,addedOrModified:[],removed:[]};return s.set(e,i),i}let qe=class extends(je((0,o.p)(r.Z))){constructor(e){super(e),this._storage=new ue.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}_createMatcher(e,t,s){if(e){const i=(0,de.MD)({indexCount:0,fields:{}},"feature",e);this._matcher=(0,he.fL)(i,t,null,s)}}_createDisplayId(e){return this._displayIds.has(e)||this._displayIds.set(e,this._storage.createDisplayId()),this._displayIds.get(e)}initialize(){this._attributeStore=new ce.Z({type:"local",initialize:e=>Promise.resolve(this.container.attributeView.initialize(e)),update:e=>this.container.attributeView.requestUpdate(e),render:()=>this.container.requestRender()},(0,Ze.Y)()),this.container.hasHighlight=()=>this._attributeStore.hasHighlight;const e=new le.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new Ue(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(e=>{this._createDisplayId(e.uid),this._setFilterState(e.uid,e.visible)}),(e=>{const t=this._displayIds.get(e.uid);this._displayIds.delete(e.uid),this._storage.releaseDisplayId(t)}),this._hashToCIM),this._meshFactory=new ae.j(null,this.uid,e),this._templateStore=e,this.handles.add([this.watch("renderer",(t=>{this._createMatcher(t,e,this.container.stage.resourceManager);for(const e of this.graphics)this._pendingUpdate.updated.add(e);this.requestUpdate()})),this.view.graphicsTileStore.on("update",(e=>this._onTileUpdate(e))),this.container.on("attach",(()=>{Ee&&this.container.enableRenderingBounds((()=>this._graphicStore.getAllBounds())),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",(e=>this._graphicsChangeHandler(e))),"graphics");const t=this.container.stage.resourceManager;this._createMatcher(this.renderer,e,t),this._graphicStore.setResourceManager(t),this._attached=!0,this.notifyChange("updating")}))]);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(e){if(!this.view||!this.view.position)return null;const{resolution:t,rotation:s}=this.view.state;return this._graphicStore.hitTest(e.x,e.y,2,t,s)}update(e){(0,h.k_)(this._controller.signal);const t=e.state,{resolution:s}=t;if(this._graphicStore.updateLevel(s),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(e){this.updateRequested&&(this.updateRequested=!1,this.update(e))}graphicUpdateHandler(e){const{graphic:t,property:s,newValue:i}=e;switch(s){case"attributes":case"geometry":case"symbol":this._pendingUpdate.updated.add(t),this.requestUpdate();break;case"visible":this._setFilterState(t.uid,i),this._attributeStore.sendUpdates()}}setHighlight(e){const t=e.map((e=>this._displayIds.get(e)));this._attributeStore.setHighlight(e,t)}_getIntersectingTiles(e){const t=this._graphicStore.getBounds(e);if(!t||0===(0,f.bf)(t)||0===(0,f.Cb)(t))return[];const s=(0,Te.Zu)(t,this.view.spatialReference);return(0,l.pC)(s)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(s[0]),...this.view.graphicsTileStore.boundsIntersections(s[1])])]:this.view.graphicsTileStore.boundsIntersections(t)}async _updateTile(e){(0,h.k_)(this._controller.signal);const t=e.tile,s=this._getGraphicsData(this._templateStore,t,e.addedOrModified),i=await this._processGraphics(t,s);return(0,h.k_)(this._controller.signal),this._patchTile(t.key,{type:"update",addOrUpdate:i,remove:e.removed,end:!0,clear:!1,sort:!1}),i}_patchTile(e,t){if(!this._tiles.has(e))return;const s=this._tiles.get(e);this.container.onTileData(s,t),this.container.requestRender()}_graphicsChangeHandler(e){const t=this._pendingUpdate;for(const s of e.added)t.added.add(s);for(const s of e.moved)t.updated.add(s);for(const s of e.removed)this._pendingUpdate.added.has(s)?t.added.delete(s):t.removed.add(s);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const e={added:[],removed:[],updated:[]};if(!this.graphics)return e;const t=this._pendingUpdate;for(const s of this.graphics.items)t.added.has(s)?e.added.push(s):t.updated.has(s)&&e.updated.push(s);for(const s of t.removed)this._graphicStore.has(s)&&e.removed.push(s);return t.added.clear(),t.removed.clear(),t.updated.clear(),e}async _updateGraphics(){this._processing=!0;const{added:e,removed:t,updated:s}=this._getGraphicsToUpdate(),i=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const e=this.view.state,{resolution:t}=e;this._graphicStore.updateLevel(t)}const n=[],o=new Array(e.length+t.length);for(let e=0;e<s.length;e++){const t=s[e],a=this._getIntersectingTiles(t);for(const e of a)r=e.id,Ne(r,e,i).removed.push(this._displayIds.get(t.uid));n.push(this._updateGraphic(t,null)),o[e]=t}const a=s.length;for(let t=0;t<e.length;t++){const s=e[t];o[a+t]=s,this._graphicsSet.add(s),n.push(this._addGraphic(s))}for(const e of t){this._abortProcessingGraphic(e.uid);const t=this._getIntersectingTiles(e);for(const s of t)r=s.id,Ne(r,s,i).removed.push(this._displayIds.get(e.uid));this._graphicsSet.delete(e),this._graphicStore.remove(e)}let l;this._flipUpdatingGraphics(),await Promise.all(n);for(let e=0;e<o.length;e++){l=o[e];const t=this._getIntersectingTiles(l);for(const e of t)r=e.id,Ne(r,e,i).addedOrModified.push(l)}this._graphicStore.updateZ();const h=[];for(const[e,t]of i)h.push(this._updateTile(t));await Promise.all(h)}catch(n){(0,h.D_)(n)}for(const o of t)try{const e=await this._getSymbolForGraphic(o,{});if(e){const t=e.hash();this._hashToExpandedSymbol.delete(t)}}catch(n){(0,h.D_)(n)}i.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics())}_getArcadeInfo(e){const t=(e.attributes?Object.keys(e.attributes):[]).map((t=>({name:t,alias:t,type:"string"==typeof e.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"})));return(0,l.Wi)(e.geometry)?null:{geometryType:(0,m.Ji)(e.geometry),spatialReference:u.Z.fromJSON(e.geometry.spatialReference),fields:t}}_getSymbolForGraphic(e,t){return(0,h.k_)(this._controller.signal),(0,l.pC)(e.symbol)?Promise.resolve(e.symbol):(0,l.pC)(this.renderer)?this.renderer.getSymbolAsync(e,{scale:this.view.scale,abortOptions:t}):Promise.resolve(this._getNullSymbol(e))}_getCIMSymbol(e,t,s){let i=this._hashToCIM.get(t);if(i)return Promise.resolve(i);const r=(0,x.rW)(e);if((0,l.pC)(r)){if("CIMSymbolReference"===r.type)return i=r,this._hashToCIM.set(t,i),Promise.resolve(i);let e=this._hashToCIMSymbolPromise.get(t);return e||(e=r.fetchCIMSymbol(s).then((e=>(this._hashToCIM.set(t,e.data),this._hashToCIMSymbolPromise.delete(t),e))).catch((e=>(this._hashToCIMSymbolPromise.delete(t),(0,h.r9)(e),null))),this._hashToCIMSymbolPromise.set(t,e),e)}return Promise.resolve(null)}_expandCIMSymbol(e,t,s,i){const r=this._hashToExpandedSymbol.get(s);if(r)return Promise.resolve(r);let n=this._hashToExpandedSymbolPromise.get(s);if(n)return n;const o=this.container.stage,a=this._getArcadeInfo(t),l=(0,de.q5)(null),h=(0,Ke.createSymbolSchema)(e,l);return n=(0,Pe.B3)(h,a,o.resourceManager,i),this._hashToExpandedSymbolPromise.set(s,n),n.then((e=>(this._hashToExpandedSymbol.set(s,e),this._hashToExpandedSymbolPromise.delete(s),e))),n}async _getSymbolResources(e,t){return(0,h.k_)(this._controller.signal),this.container.stage?this._getSymbolForGraphic(e,t).then((s=>{const i=s.hash();return this._getCIMSymbol(s,i,t).then((s=>(0,l.Wi)(s)?null:this._expandCIMSymbol(s,e,i,t).then((e=>{const t=e.layers.filter((e=>"text"===e.type&&"string"==typeof e.text));if(t&&t.length>0){const s=new Array(t.length);for(let e=0;e<t.length;e++){const i=t[e],r=[],[o]=(0,n.E)(i.text);for(let e=0;e<o.length;e++)r.push(o.charCodeAt(e));s[e]={symbol:i,id:e,glyphIds:r}}const r=new Map;return this.container.getMaterialItems(s).then((s=>{for(let e=0;e<t.length;e++){const i=t[e];r.set(i.cim,{text:i.text,mosaicItem:s[e].mosaicItem})}return{symbol:e,textInfo:r,hash:i}}))}return{symbol:e,hash:i}}))))})).catch((e=>((0,h.r9)(e),null))):null}async _projectAndNormalizeGeometry(e,t){if((0,h.k_)(this._controller.signal),(0,l.Wi)(e.geometry)||"mesh"===e.geometry.type)return null;let s=e.geometry;if((0,m.oU)(s)){const e=s.rings;s.rings=e}else if((0,m.l9)(s)){const e=s.paths;s.paths=e}else if((0,m.YX)(s)){const i=await this._getSymbolForGraphic(e,t);(0,h.k_)(this._controller.signal),s=(0,Te.yA)(i.type)||(0,Te.ab)(i.type)?s.center:(0,Te.XA)(s)}await(0,_._W)(s.spatialReference,this.view.spatialReference);const i=(0,y.U)(s),r=(0,_.iV)(i,s.spatialReference,this.view.spatialReference);return(0,p.pW)(r),r}_onTileUpdate(e){const t=(0,g.C5)(this.view.spatialReference);if(e.added&&e.added.length>0)for(const s of e.added)this._addNewTile(s,t);if(e.removed&&e.removed.length>0)for(const s of e.removed)this._removeTile(s.key)}async _addGraphic(e){this._abortProcessingGraphic(e.uid),(0,h.k_)(this._controller.signal);const t=new AbortController;this._graphicIdToAbortController.set(e.uid,t);const s={signal:t.signal};try{await this._addOrUpdateGraphic(e,s),(0,h.k_)(this._controller.signal),this._graphicIdToAbortController.delete(e.uid)}catch(k){if(this._graphicIdToAbortController.delete(e.uid),!(0,h.D_)(k))throw k}}_updateGraphic(e,t){(0,h.k_)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((t=>{let[s,i]=t;(0,h.k_)(this._controller.signal),this._graphicStore.addOrModify(e,i,s)}))}_addOrUpdateGraphic(e,t){(0,h.k_)(this._controller.signal);const s=this._projectAndNormalizeGeometry(e,t),i=this._getSymbolResources(e,t);return Promise.all([s,i]).then((t=>{let[s,i]=t;(0,h.k_)(this._controller.signal),this._graphicsSet.has(e)&&this._graphicStore.addOrModify(e,i,s)}))}_addTile(e){const t=this.view.featuresTilingScheme.getTileBounds((0,f.Ue)(),e),s=new z(e,t[0],t[3]);return this._tiles.set(e,s),this.container.addChild(s),s}async _addNewTile(e,t){const s=this._addTile(e.key),i=this._graphicStore.queryTileData(this._templateStore,e);if(0===i.length)return;if(t){const s=Math.round((t.valid[1]-t.valid[0])/e.resolution);for(const e of i)e.geometry&&((0,m.wp)(e.geometry)||(0,m.aW)(e.geometry))&&this._wrapPoints(e,s)}const r=e.key;this._tileUpdateSet.add(e.key),this.notifyChange("updating");try{const t={type:"update",clear:!1,addOrUpdate:await this._processGraphics(e,i),remove:[],end:!0,sort:!1};s.patch(t),this._tileUpdateSet.delete(r),this.notifyChange("updating")}catch(n){if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!(0,h.D_)(n))throw n}}_removeTile(e){if(!this._tiles.has(e))return;const t=this._tiles.get(e);this.container.removeChild(t),t.destroy(),this._tiles.delete(e)}_setFilterState(e,t){const s=this._displayIds.get(e),i=this._attributeStore.getHighlightFlag(e);this._attributeStore.setData(s,0,0,i|(t?b.Zd:0))}_getGraphicsData(e,t,s){const i=this.view,r=(0,g.C5)(i.spatialReference),n=this._graphicStore.getGraphicsData(e,t,s);if(r){const e=Math.round((r.valid[1]-r.valid[0])/t.resolution);for(const t of n)t.geometry&&((0,m.wp)(t.geometry)||(0,m.aW)(t.geometry))&&this._wrapPoints(t,e)}return n}_wrapPoints(e,t){const s=e.geometry;(0,m.aW)(s)?this._wrapMultipoint(s,t):this._wrapPoint(e,t)}_wrapMultipoint(e,t){const s=e.points,i=[];let r=0,n=0;for(const[o,a]of s){if(i.push([o+r,a]),r=0,t===Te.I_){const e=5*Te.y1;o+n<e?(i.push([t,0]),r=-t):o+n>Te.I_-e&&(i.push([-t,0]),r=t)}else o+n<-Te.y1?(i.push([t,0]),r=-t):o+n>Te.I_+Te.y1&&(i.push([-t,0]),r=t);n+=o}e.points=i}_wrapPoint(e,t){const s=e.geometry;if(t===Te.I_){const i=5*Te.y1;s.x<i?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>Te.I_-i&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}else s.x<-Te.y1?e.geometry={points:[[s.x,s.y],[t,0]]}:s.x>Te.I_+Te.y1&&(e.geometry={points:[[s.x,s.y],[-t,0]]})}_processGraphics(e,t,s){if(!t||!t.length||!this._meshFactory)return null;const i=ye.from(t),r=this._meshFactory;return this._matcher.then((t=>r.analyzeGraphics(i,this.container.stage.resourceManager,t,null,null,s).then((()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(e,i))))))}_processAnalyzedGraphics(e,t){const s=this._meshFactory,i=t.getSize(),r=t.getCursor(),n={features:i,records:i,metrics:0},o=new oe._(e.key.id,n,{fill:"default"},!1,!1),a=[];for(;r.next();){const t=r.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]);const i=new W(t.displayId);i.insertAfter=t.insertAfter,a.push(i),s.writeGraphic(o,r,e.level,this.container.stage.resourceManager)}const l=e.tileInfoView.tileInfo.isWrappable,h=o.serialize(l);if(1!==h.length)return new ne;const d=h[0].message;return ne.fromVertexData(d,a)}_abortProcessingGraphic(e){this._graphicIdToAbortController.has(e)&&this._graphicIdToAbortController.get(e).abort()}_getNullSymbol(e){const t=e.geometry;return(0,m.l9)(t)?v.mW:(0,m.oU)(t)||(0,m.YX)(t)?v.kD:v.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")}),160),this.notifyChange("updating")}};(0,i._)([(0,d.Cb)({constructOnly:!0})],qe.prototype,"requestUpdateCallback",void 0),(0,i._)([(0,d.Cb)()],qe.prototype,"container",void 0),(0,i._)([(0,d.Cb)({constructOnly:!0})],qe.prototype,"graphics",void 0),(0,i._)([(0,d.Cb)()],qe.prototype,"updating",null),(0,i._)([(0,d.Cb)()],qe.prototype,"view",void 0),(0,i._)([(0,d.Cb)()],qe.prototype,"updateRequested",void 0),qe=(0,i._)([(0,c.j)("esri.views.2d.layers.support.GraphicsView2D")],qe);const He=qe}}]);
//# sourceMappingURL=4280.56e6690d.chunk.js.map