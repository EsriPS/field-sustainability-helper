"use strict";(globalThis.webpackChunkfield_sustainability_helper=globalThis.webpackChunkfield_sustainability_helper||[]).push([[1503],{85796:(e,t,r)=>{r.d(t,{F:()=>C});var s=r(76200),i=r(92026),o=r(43813),a=r(50689),n=r(69732),l=r(23084),u=r(27366),p=r(52639),c=r(46784),f=r(49861),d=(r(63780),r(93169),r(25243),r(38511)),y=r(69912),m=r(49818),g=r(89677),b=r(10691);let h=class extends c.wq{constructor(e){super(e),this.directionLines=null,this.directionPoints=null,this.directions=null,this.route=null,this.routeName=null,this.stops=null}};(0,u._)([(0,f.Cb)({type:m.default,json:{write:!0}})],h.prototype,"directionLines",void 0),(0,u._)([(0,f.Cb)({type:m.default,json:{write:!0}})],h.prototype,"directionPoints",void 0),(0,u._)([(0,f.Cb)({type:b.Z,json:{write:!0}})],h.prototype,"directions",void 0),(0,u._)([(0,f.Cb)({type:p.Z,json:{write:!0}})],h.prototype,"route",void 0),(0,u._)([(0,f.Cb)({type:String,json:{write:!0}})],h.prototype,"routeName",void 0),(0,u._)([(0,f.Cb)({type:[p.Z],json:{write:!0}})],h.prototype,"stops",void 0),h=(0,u._)([(0,y.j)("esri.rest.support.RouteResult")],h);const v=h;function B(e){return e&&m.default.fromJSON(e).features.map((e=>e))}let R=class extends c.wq{constructor(e){super(e),this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routeResults=null}readPointBarriers(e,t){return B(t.barriers)}readPolylineBarriers(e){return B(e)}readPolygonBarriers(e){return B(e)}};(0,u._)([(0,f.Cb)({type:[g.Z]})],R.prototype,"messages",void 0),(0,u._)([(0,f.Cb)({type:[p.Z]})],R.prototype,"pointBarriers",void 0),(0,u._)([(0,d.r)("pointBarriers",["barriers"])],R.prototype,"readPointBarriers",null),(0,u._)([(0,f.Cb)({type:[p.Z]})],R.prototype,"polylineBarriers",void 0),(0,u._)([(0,d.r)("polylineBarriers")],R.prototype,"readPolylineBarriers",null),(0,u._)([(0,f.Cb)({type:[p.Z]})],R.prototype,"polygonBarriers",void 0),(0,u._)([(0,d.r)("polygonBarriers")],R.prototype,"readPolygonBarriers",null),(0,u._)([(0,f.Cb)({type:[v]})],R.prototype,"routeResults",void 0),R=(0,u._)([(0,y.j)("esri.rest.support.RouteSolveResult")],R);const _=R,A=(0,o.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},stops:!0,travelMode:!0});function N(e){return"esri.rest.support.FeatureSet"===(null==e?void 0:e.declaredClass)}async function C(e,t,r){const o=[],u=[],p={},c={},f=(0,l.en)(e),{path:d}=f;N(t.stops)&&(0,n.et)(t.stops.features,u,"stops.features",p),N(t.pointBarriers)&&(0,n.et)(t.pointBarriers.features,u,"pointBarriers.features",p),N(t.polylineBarriers)&&(0,n.et)(t.polylineBarriers.features,u,"polylineBarriers.features",p),N(t.polygonBarriers)&&(0,n.et)(t.polygonBarriers.features,u,"polygonBarriers.features",p);const y=await(0,a.aX)(u);for(const s in p){const e=p[s];o.push(s),c[s]=y.slice(e[0],e[1])}if((0,n.Wf)(c,o)){let e=null;try{e=await(0,n.bI)(d,t.apiKey,r)}catch{}e&&!e.hasZ&&(0,n.ef)(c,o)}for(const s in c)c[s].forEach(((e,r)=>{t.get(s)[r].geometry=e}));const m={...r,query:{...f.query,...A.toQueryParams(t),f:"json"}},g=d.endsWith("/solve")?d:`${d}/solve`,{data:b}=await(0,s.default)(g,m);return function(e){var t,r,s,o,a;const n=new Map,{directionLines:l,directionPoints:u,directions:p,routes:c,stops:f,barriers:d,polygonBarriers:y,polylineBarriers:m,messages:g}=e,b=null!=(t=null!=(r=null!=(s=null!=(o=null==c?void 0:c.spatialReference)?o:null==f?void 0:f.spatialReference)?s:null==d?void 0:d.spatialReference)?r:null==y?void 0:y.spatialReference)?t:null==m?void 0:m.spatialReference;null==c||c.features.forEach((e=>{const t=e.attributes.Name,r=e.attributes.ObjectID;n.has(t)?(n.get(t).route=e,n.get(t).routeId=r):n.set(t,{route:e,routeId:r,routeName:t}),(0,i.pC)(e.geometry)&&(e.geometry.spatialReference=b)})),null==p||p.forEach((e=>{const t=e.routeName;n.has(t)?n.get(t).directions=e:n.set(t,{routeName:t,directions:e})})),null==f||f.features.forEach((e=>{var t;const r=null!=(t=e.attributes.RouteName)?t:null;n.has(r)?n.get(r).stops?n.get(r).stops.push(e):n.get(r).stops=[e]:n.set(r,{stops:[e],routeName:r}),(0,i.pC)(e.geometry)&&(e.geometry.spatialReference=b)}));const h=null==(a=null==f?void 0:f.features.every((e=>null==e.attributes.RouteName)))||a;if((null==f?void 0:f.features.length)>0&&h){const e=Array.from(n.keys())[0];n.get(e).stops=n.get(null).stops,n.delete(null)}null==l||l.features.forEach((e=>{var t;const r=e.attributes.RouteID,s=null==(t=Array.from(n.values()).find((e=>e.routeId===r)))?void 0:t.routeName;if(s)if(n.has(s))if(n.get(s).directionLines)n.get(s).directionLines.features.push(e);else{const{fieldAliases:t,geometryType:r,spatialReference:i}=l;n.get(s).directionLines={features:[e],fieldAliases:t,geometryType:r,spatialReference:i}}else{const{fieldAliases:t,geometryType:r,spatialReference:i}=l;n.set(s,{routeName:s,directionLines:{features:[e],fieldAliases:t,geometryType:r,spatialReference:i}})}})),null==u||u.features.forEach((e=>{var t;const r=e.attributes.RouteID,s=null==(t=Array.from(n.values()).find((e=>e.routeId===r)))?void 0:t.routeName;if(s)if(n.has(s))if(n.get(s).directionPoints)n.get(s).directionPoints.features.push(e);else{const{fieldAliases:t,geometryType:r,spatialReference:i}=u;n.get(s).directionPoints={features:[e],fieldAliases:t,geometryType:r,spatialReference:i}}else{const{fieldAliases:t,geometryType:r,spatialReference:i}=u;n.set(s,{routeName:s,directionPoints:{features:[e],fieldAliases:t,geometryType:r,spatialReference:i}})}}));const v=Array.from(n.values());return _.fromJSON({routeResults:v,barriers:d,polygonBarriers:y,polylineBarriers:m,messages:g})}(b)}},11503:(e,t,r)=>{r.r(t),r.d(t,{default:()=>l});var s=r(27366),i=(r(32718),r(25243),r(63780),r(93169),r(75366),r(69912)),o=r(85796),a=r(4338);let n=class extends a.Z{constructor(e){super(e)}solve(e,t){return(0,o.F)(this.url,e,t)}};n=(0,s._)([(0,i.j)("esri.tasks.RouteTask")],n);const l=n}}]);
//# sourceMappingURL=1503.1cc3360b.chunk.js.map